// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OngProject.Infrastructure.Data;

namespace OngProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210929133255_alkemyone")]
    partial class alkemyone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OngProject.Core.Models.ActivitiesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Content1",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Image1",
                            IsDeleted = false,
                            Name = "Name1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Content2",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Image2",
                            IsDeleted = false,
                            Name = "Name2"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Content3",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Image3",
                            IsDeleted = false,
                            Name = "Name3"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Content4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Image4",
                            IsDeleted = false,
                            Name = "Name4"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Content5",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Image5",
                            IsDeleted = false,
                            Name = "Name5"
                        },
                        new
                        {
                            Id = 6,
                            Content = "Content6",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Image6",
                            IsDeleted = false,
                            Name = "Name6"
                        },
                        new
                        {
                            Id = 7,
                            Content = "Content7",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Image7",
                            IsDeleted = false,
                            Name = "Name7"
                        },
                        new
                        {
                            Id = 8,
                            Content = "Content8",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Image8",
                            IsDeleted = false,
                            Name = "Name8"
                        },
                        new
                        {
                            Id = 9,
                            Content = "Content9",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Image9",
                            IsDeleted = false,
                            Name = "Name9"
                        },
                        new
                        {
                            Id = 10,
                            Content = "Content10",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "Image10",
                            IsDeleted = false,
                            Name = "Name10"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Models.CategoriesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OngProject.Core.Models.CommentsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OngProject.Core.Models.ContactsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("OngProject.Core.Models.MembersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FacebookURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InstagramURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedinURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("OngProject.Core.Models.NewsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("OngProject.Core.Models.OrganizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutUsText")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("FacebookURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InstagramURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedinURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<string>("WelcomeText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("OngProject.Core.Models.RolModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Rols");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsDeleted = false,
                            Name = "Standard"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Models.SlidesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("OngProject.Core.Models.TestimonialsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("OngProject.Core.Models.UsersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfirmPassword = "da2cb7f780b225403e5487ce7d40feaa0283f663ce05c7882df100110e8aae86",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.1@example.com",
                            FirstName = "FirstName1",
                            IsDeleted = false,
                            LastName = "LastName1",
                            Password = "da2cb7f780b225403e5487ce7d40feaa0283f663ce05c7882df100110e8aae86",
                            RolId = 1
                        },
                        new
                        {
                            Id = 2,
                            ConfirmPassword = "e95a7a5547e515340590caa15cbaa99914f594f1398e24e9cfd5207fb66dc0ff",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.2@example.com",
                            FirstName = "FirstName2",
                            IsDeleted = false,
                            LastName = "LastName2",
                            Password = "e95a7a5547e515340590caa15cbaa99914f594f1398e24e9cfd5207fb66dc0ff",
                            RolId = 1
                        },
                        new
                        {
                            Id = 3,
                            ConfirmPassword = "c02e7b0531c16cf9f95c1686fb9497c052aebe4ca9a3bf00fbc83c11245df53c",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.3@example.com",
                            FirstName = "FirstName3",
                            IsDeleted = false,
                            LastName = "LastName3",
                            Password = "c02e7b0531c16cf9f95c1686fb9497c052aebe4ca9a3bf00fbc83c11245df53c",
                            RolId = 1
                        },
                        new
                        {
                            Id = 4,
                            ConfirmPassword = "3e3c9fc79e9983f129e8c2868087a366de92423d0fc9cfe39b4b43b9715b0fe6",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.4@example.com",
                            FirstName = "FirstName4",
                            IsDeleted = false,
                            LastName = "LastName4",
                            Password = "3e3c9fc79e9983f129e8c2868087a366de92423d0fc9cfe39b4b43b9715b0fe6",
                            RolId = 1
                        },
                        new
                        {
                            Id = 5,
                            ConfirmPassword = "94137b5c6376f43518d5d158803e477fb33add3da1b4cf49bfa7ce57f09d4ad2",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.5@example.com",
                            FirstName = "FirstName5",
                            IsDeleted = false,
                            LastName = "LastName5",
                            Password = "94137b5c6376f43518d5d158803e477fb33add3da1b4cf49bfa7ce57f09d4ad2",
                            RolId = 1
                        },
                        new
                        {
                            Id = 6,
                            ConfirmPassword = "7c7bc4898dcac630e60c547a30157d0b4ebf38a43b0ccb830d1660025cbc501f",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.6@example.com",
                            FirstName = "FirstName6",
                            IsDeleted = false,
                            LastName = "LastName6",
                            Password = "7c7bc4898dcac630e60c547a30157d0b4ebf38a43b0ccb830d1660025cbc501f",
                            RolId = 1
                        },
                        new
                        {
                            Id = 7,
                            ConfirmPassword = "83f164ce80cfaa93ece1883784d17c4d88451f76b07456cdc8af3020847fb56b",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.7@example.com",
                            FirstName = "FirstName7",
                            IsDeleted = false,
                            LastName = "LastName7",
                            Password = "83f164ce80cfaa93ece1883784d17c4d88451f76b07456cdc8af3020847fb56b",
                            RolId = 1
                        },
                        new
                        {
                            Id = 8,
                            ConfirmPassword = "ce62fe20d866e1e69de326a4f01b7a92b1ee4f1a3df9ae6698196178900b1723",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.8@example.com",
                            FirstName = "FirstName8",
                            IsDeleted = false,
                            LastName = "LastName8",
                            Password = "ce62fe20d866e1e69de326a4f01b7a92b1ee4f1a3df9ae6698196178900b1723",
                            RolId = 1
                        },
                        new
                        {
                            Id = 9,
                            ConfirmPassword = "343fb0969817815b1eb788c549b2a27601366b57ba383dc8ba46e39e64e5e6bf",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.9@example.com",
                            FirstName = "FirstName9",
                            IsDeleted = false,
                            LastName = "LastName9",
                            Password = "343fb0969817815b1eb788c549b2a27601366b57ba383dc8ba46e39e64e5e6bf",
                            RolId = 1
                        },
                        new
                        {
                            Id = 10,
                            ConfirmPassword = "7562a64cdd0a4a1f7d9e77a50dcdc52ffe6a59db7d196293caa5e25a15a9e367",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.10@example.com",
                            FirstName = "FirstName10",
                            IsDeleted = false,
                            LastName = "LastName10",
                            Password = "7562a64cdd0a4a1f7d9e77a50dcdc52ffe6a59db7d196293caa5e25a15a9e367",
                            RolId = 1
                        },
                        new
                        {
                            Id = 11,
                            ConfirmPassword = "e4d79a53b370e1c11e4b10905fa6325c524a1e9beb6a4612dbf72460da0325b2",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.11@example.com",
                            FirstName = "FirstName11",
                            IsDeleted = false,
                            LastName = "LastName11",
                            Password = "e4d79a53b370e1c11e4b10905fa6325c524a1e9beb6a4612dbf72460da0325b2",
                            RolId = 2
                        },
                        new
                        {
                            Id = 12,
                            ConfirmPassword = "0d01e6313118ce3b9367556387930a3ebfdce61a629befacdf7afdad43245a8d",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.12@example.com",
                            FirstName = "FirstName12",
                            IsDeleted = false,
                            LastName = "LastName12",
                            Password = "0d01e6313118ce3b9367556387930a3ebfdce61a629befacdf7afdad43245a8d",
                            RolId = 2
                        },
                        new
                        {
                            Id = 13,
                            ConfirmPassword = "5a2713bbbaf02b5ccd0ddefea7585bd00ac6433bb75d5ac8e33d4af9b0505b6e",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.13@example.com",
                            FirstName = "FirstName13",
                            IsDeleted = false,
                            LastName = "LastName13",
                            Password = "5a2713bbbaf02b5ccd0ddefea7585bd00ac6433bb75d5ac8e33d4af9b0505b6e",
                            RolId = 2
                        },
                        new
                        {
                            Id = 14,
                            ConfirmPassword = "433469d27acfdac401ca6dccfa117f862f88ab196db90351a2d3a455f6425562",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.14@example.com",
                            FirstName = "FirstName14",
                            IsDeleted = false,
                            LastName = "LastName14",
                            Password = "433469d27acfdac401ca6dccfa117f862f88ab196db90351a2d3a455f6425562",
                            RolId = 2
                        },
                        new
                        {
                            Id = 15,
                            ConfirmPassword = "fefdbc0ad406198526298fa68616ab7590845ebb4b6610cd95b7d94fcb4a9327",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.15@example.com",
                            FirstName = "FirstName15",
                            IsDeleted = false,
                            LastName = "LastName15",
                            Password = "fefdbc0ad406198526298fa68616ab7590845ebb4b6610cd95b7d94fcb4a9327",
                            RolId = 2
                        },
                        new
                        {
                            Id = 16,
                            ConfirmPassword = "bb207afb4c102f15ae931f4b61c4ab41f91fec28a7eeca31f9be6032a9241a5e",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.16@example.com",
                            FirstName = "FirstName16",
                            IsDeleted = false,
                            LastName = "LastName16",
                            Password = "bb207afb4c102f15ae931f4b61c4ab41f91fec28a7eeca31f9be6032a9241a5e",
                            RolId = 2
                        },
                        new
                        {
                            Id = 17,
                            ConfirmPassword = "c83de05a9ad9c1166c2b7a44ad2c306fced3a2bed18474432086f864abd04571",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.17@example.com",
                            FirstName = "FirstName17",
                            IsDeleted = false,
                            LastName = "LastName17",
                            Password = "c83de05a9ad9c1166c2b7a44ad2c306fced3a2bed18474432086f864abd04571",
                            RolId = 2
                        },
                        new
                        {
                            Id = 18,
                            ConfirmPassword = "7d46c9a102dd94082b0df0f06aa9b69256bec64f0c915ed34245235beaa673a1",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.18@example.com",
                            FirstName = "FirstName18",
                            IsDeleted = false,
                            LastName = "LastName18",
                            Password = "7d46c9a102dd94082b0df0f06aa9b69256bec64f0c915ed34245235beaa673a1",
                            RolId = 2
                        },
                        new
                        {
                            Id = 19,
                            ConfirmPassword = "462baa5d5c9865c59270375ad5bf4c5856372ddec84deefd9af2f15a03756142",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.19@example.com",
                            FirstName = "FirstName19",
                            IsDeleted = false,
                            LastName = "LastName19",
                            Password = "462baa5d5c9865c59270375ad5bf4c5856372ddec84deefd9af2f15a03756142",
                            RolId = 2
                        },
                        new
                        {
                            Id = 20,
                            ConfirmPassword = "69ef1883caee50de909a3f11fda6937a483da453fd363467642982830570d2b8",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email.20@example.com",
                            FirstName = "FirstName20",
                            IsDeleted = false,
                            LastName = "LastName20",
                            Password = "69ef1883caee50de909a3f11fda6937a483da453fd363467642982830570d2b8",
                            RolId = 2
                        });
                });

            modelBuilder.Entity("OngProject.Core.Models.CommentsModel", b =>
                {
                    b.HasOne("OngProject.Core.Models.NewsModel", "News")
                        .WithMany()
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OngProject.Core.Models.UsersModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OngProject.Core.Models.NewsModel", b =>
                {
                    b.HasOne("OngProject.Core.Models.CategoriesModel", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OngProject.Core.Models.SlidesModel", b =>
                {
                    b.HasOne("OngProject.Core.Models.OrganizationModel", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("OngProject.Core.Models.UsersModel", b =>
                {
                    b.HasOne("OngProject.Core.Models.RolModel", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
